arvore(animes$Type)
pizza= function(x) {
tabela=table(x)
tabela=tabela[order(tabela)]
prop_tabela=prop.table(tabela)*100
pie(tabela,labels =paste(prop_tabela,'%') , col = brewer.pal(n =names(tabela) , name = "Set1"), clockwise = T)
legend("bottomleft", legend =names(tabela),
fill = brewer.pal(n = names(tabela), name = "Set1"))
}
pizza(animes$Type)
arvore= function(x,titulo=NULL){
table(x) %>%
as.data.frame() %>%
treemap("Var1", "Freq",title = cat(titulo), fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type)
pizza= function(x) {
tabela=table(x)
tabela=tabela[order(tabela)]
prop_tabela=prop.table(tabela)*100
pie(tabela,labels =paste(prop_tabela,'%') , col = brewer.pal(n =names(tabela) , name = "Set1"), clockwise = T)
legend("bottomleft", legend =names(tabela),
fill = brewer.pal(n = names(tabela), name = "Set1"))
}
pizza(animes$Type)
arvore= function(x,titulo=NULL){
table(x) %>%
as.data.frame() %>%
treemap("Var1", "Freq",title = cat(titulo), fontfamily.title = "serif",
fontsize.title = 24)
}
table(animes$Type)
pizza= function(x) {
tabela=table(x)
tabela=tabela[order(tabela)]
prop_tabela=prop.table(tabela)*100
pie(tabela,labels =paste(prop_tabela,'%') , col = brewer.pal(n =names(tabela) , name = "Set1"), clockwise = T)
legend("bottomleft", legend =names(tabela),
fill = brewer.pal(n = names(tabela), name = "Set1"))
}
pizza(animes$Type)
arvore= function(x,titulo=NULL){
table(x) %>%
as.data.frame() %>%
treemap("Var1", "Freq",title = cat(titulo), fontfamily.title = "serif",
fontsize.title = 24)
}
table(animes$Type) %>%
as.data.frame()
pizza= function(x) {
tabela=table(x)
tabela=tabela[order(tabela)]
prop_tabela=prop.table(tabela)*100
pie(tabela,labels =paste(prop_tabela,'%') , col = brewer.pal(n =names(tabela) , name = "Set1"), clockwise = T)
legend("bottomleft", legend =names(tabela),
fill = brewer.pal(n = names(tabela), name = "Set1"))
}
pizza(animes$Type)
arvore= function(x,titulo=NULL){
table(x) %>%
as.data.frame() %>%
treemap("Var1", "Freq",title = cat(titulo), fontfamily.title = "serif",
fontsize.title = 24)
}
table(animes$Type) %>%
as.data.frame() %>% treemap("Var1", "Freq",title = cat(titulo), fontfamily.title = "serif",
fontsize.title = 24)
library(tidyverse)
library(treemap)
library(stringr)
library(RColorBrewer)
library(TeachingDemos)
library(plotly)
pizza= function(x) {
tabela=table(x)
tabela=tabela[order(tabela)]
prop_tabela=prop.table(tabela)*100
pie(tabela,labels =paste(prop_tabela,'%') , col = brewer.pal(n =names(tabela) , name = "Set1"), clockwise = T)
legend("bottomleft", legend =names(tabela),
fill = brewer.pal(n = names(tabela), name = "Set1"))
}
pizza(animes$Type)
arvore= function(x,titulo=NULL){
table(x) %>%
as.data.frame() %>%
treemap("Var1", "Freq",title = cat(titulo), fontfamily.title = "serif",
fontsize.title = 24)
}
table(animes$Type) %>%
as.data.frame() %>% treemap("Var1", "Freq",title = cat(titulo), fontfamily.title = "serif",
fontsize.title = 24)
pizza= function(x) {
tabela=table(x)
tabela=tabela[order(tabela)]
prop_tabela=prop.table(tabela)*100
pie(tabela,labels =paste(prop_tabela,'%') , col = brewer.pal(n =names(tabela) , name = "Set1"), clockwise = T)
legend("bottomleft", legend =names(tabela),
fill = brewer.pal(n = names(tabela), name = "Set1"))
}
pizza(animes$Type)
arvore= function(x,titulo=NULL){
table(x) %>%
as.data.frame() %>%
treemap("Var1", "Freq",title = cat(titulo), fontfamily.title = "serif",
fontsize.title = 24)
}
table(animes$Type) %>%
as.data.frame()
%>% treemap("Var1", "Freq",title = cat(titulo), fontfamily.title = "serif",
pizza= function(x) {
tabela=table(x)
tabela=tabela[order(tabela)]
prop_tabela=prop.table(tabela)*100
pie(tabela,labels =paste(prop_tabela,'%') , col = brewer.pal(n =names(tabela) , name = "Set1"), clockwise = T)
legend("bottomleft", legend =names(tabela),
fill = brewer.pal(n = names(tabela), name = "Set1"))
}
pizza(animes$Type)
arvore= function(x,titulo=NULL){
table(x) %>%
as.data.frame() %>%
treemap("Var1", "Freq",title = cat(titulo), fontfamily.title = "serif",
fontsize.title = 24)
}
table(animes$Type) %>%
as.data.frame() %>% treemap("Var1", "Freq", fontfamily.title = "serif",
fontsize.title = 24)
arvore= function(x,titulo=''){
table(x) %>%
as.data.frame() %>%
treemap("Var1", "Freq",title = titulo, fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type)
arvore= function(x,titulo=''){
table(x) %>%
as.data.frame() %>%
treemap("Var1", "Freq",title = print(titulo), fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type)
arvore= function(x,titulo=''){
table(x) %>%
as.data.frame() %>%
treemap("Var1", "Freq",title = paste0(titulo), fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type)
arvore(animes$Type)
table(animes$Type) %>%
as.data.frame() %>% treemap("Var1", "Freq", fontfamily.title = "serif",
fontsize.title = 24)
arvore= function(x,titulo='x'){
table(x) %>%
as.data.frame() %>%  treemap("Var1", "Freq",title =titulo, fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type)
arvore= function(x){
table(x) %>%
as.data.frame() %>%  treemap("Var1", "Freq", fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type)
arvore= function(x){
tabela= table(x)
tabela= as.data.frame(tabela)
treemap(tabela,"Var1", "Freq", fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type)
arvore= function(x){
tabela= table(x)
tabela= as.data.frame(tabela)
#treemap(tabela,"Var1", "Freq", fontfamily.title = "serif",
#fontsize.title = 24)
}
arvore(animes$Type)
arvore(animes$Type)
pizza(animes$Type)
pizza(animes$Studio)
arvore= function(x){
tabela= table(x)
tabela= as.data.frame(tabela)
tabela
#treemap(tabela,"Var1", "Freq", fontfamily.title = "serif",
#fontsize.title = 24)
}
arvore(animes$Type)
arvore= function(x,titulo=NULL){
table(x) %>%
as.data.frame() %>%  treemap("x", "Freq",title = titulo, fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type)
arvore= function(x,titulo=''){
table(x) %>%
as.data.frame() %>%  treemap("x", "Freq",title = titulo, fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type)
arvore(animes$Type,'Tipos de Animes')
arvore(animes$Demographic)
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
kable(Tema_total)
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
knitr::kable(Tema_total)
animes$Studio
animes[paste0('Genero.',1:6)]=  str_split_fixed(animes$Genres,',', 6)
animes$Genero.1=str_remove_all(animes$Genero.1,"[[:punct:]]")
animes$Genero.2=str_remove_all(animes$Genero.2,"[[:punct:]]")
animes$Genero.3=str_remove_all(animes$Genero.3,"[[:punct:]]")
animes$Genero.4=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes$Genero.5=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes$Genero.6=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes[paste0('Tema.',1:6)]=str_split_fixed(animes$`Theme(s)`,',', 6)
animes$Tema.1=str_remove_all(animes$Tema.1,"[[:punct:]]")
animes$Tema.2=str_remove_all(animes$Tema.2,"[[:punct:]]")
animes$Tema.3=str_remove_all(animes$Tema.3,"[[:punct:]]")
animes$Tema.4=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes$Tema.5=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes$Tema.6=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes[paste0('Studio.',1:3)]=  str_split_fixed(animes$Genres,',', 3)
animes$Studio.1=str_remove_all(animes$Genero.1,"[[:punct:]]")
animes$Studio.2=str_remove_all(animes$Genero.2,"[[:punct:]]")
animes$Studio.3=str_remove_all(animes$Tema.3,"[[:punct:]]")
Studio_total=animes %>% select(Name,starts_with('Studio')) %>% pivot_longer(cols = starts_with("Studio"),values_to = 'Studio',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Studio))
Studio_total$Studio=str_squish(Studio_total$Studio)
Studio_total= Studio_total %>% group_by(Studio) %>% summarise(Total=n()) %>% arrange(desc(Total))
Studio_total
animes[paste0('Genero.',1:6)]=  str_split_fixed(animes$Genres,',', 6)
animes$Genero.1=str_remove_all(animes$Genero.1,"[[:punct:]]")
animes$Genero.2=str_remove_all(animes$Genero.2,"[[:punct:]]")
animes$Genero.3=str_remove_all(animes$Genero.3,"[[:punct:]]")
animes$Genero.4=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes$Genero.5=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes$Genero.6=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes[paste0('Tema.',1:6)]=str_split_fixed(animes$`Theme(s)`,',', 6)
animes$Tema.1=str_remove_all(animes$Tema.1,"[[:punct:]]")
animes$Tema.2=str_remove_all(animes$Tema.2,"[[:punct:]]")
animes$Tema.3=str_remove_all(animes$Tema.3,"[[:punct:]]")
animes$Tema.4=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes$Tema.5=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes$Tema.6=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes[paste0('Studio.',1:3)]=  str_split_fixed(animes$Genres,',', 3)
animes$Studio.1=str_remove_all(animes$Studio.1,"[[:punct:]]")
animes$Studio.2=str_remove_all(animes$Studio.2,"[[:punct:]]")
animes$Studio.3=str_remove_all(animes$Studio.3,"[[:punct:]]")
Studio_total=animes %>% select(Name,starts_with('Studio')) %>% pivot_longer(cols = starts_with("Studio"),values_to = 'Studio',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Studio))
Studio_total$Studio=str_squish(Studio_total$Studio)
Studio_total= Studio_total %>% group_by(Studio) %>% summarise(Total=n()) %>% arrange(desc(Total))
Studio_total
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(treemap)
library(stringr)
library(RColorBrewer)
library(TeachingDemos)
library(plotly)
animes_raw=read_csv('mal_top2000_anime.csv')
animes = animes_raw
pizza= function(x) {
tabela=table(x)
tabela=tabela[order(tabela)]
prop_tabela=prop.table(tabela)*100
pie(tabela,labels =paste(prop_tabela,'%') , col = brewer.pal(n =names(tabela) , name = "Set1"), clockwise = T)
legend("bottomleft", legend =names(tabela),
fill = brewer.pal(n = names(tabela), name = "Set1"))
}
arvore= function(x,titulo=''){
table(x) %>%
as.data.frame() %>%  treemap("x", "Freq",title = titulo, fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type,'Tipos de Animes')
arvore(animes$Demographic)
animes[paste0('Genero.',1:6)]=  str_split_fixed(animes$Genres,',', 6)
animes$Genero.1=str_remove_all(animes$Genero.1,"[[:punct:]]")
animes$Genero.2=str_remove_all(animes$Genero.2,"[[:punct:]]")
animes$Genero.3=str_remove_all(animes$Genero.3,"[[:punct:]]")
animes$Genero.4=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes$Genero.5=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes$Genero.6=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes[paste0('Tema.',1:6)]=str_split_fixed(animes$`Theme(s)`,',', 6)
animes$Tema.1=str_remove_all(animes$Tema.1,"[[:punct:]]")
animes$Tema.2=str_remove_all(animes$Tema.2,"[[:punct:]]")
animes$Tema.3=str_remove_all(animes$Tema.3,"[[:punct:]]")
animes$Tema.4=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes$Tema.5=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes$Tema.6=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes[paste0('Studio.',1:3)]=  str_split_fixed(animes$Genres,',', 3)
animes$Studio.1=str_remove_all(animes$Studio.1,"[[:punct:]]")
animes$Studio.2=str_remove_all(animes$Studio.2,"[[:punct:]]")
animes$Studio.3=str_remove_all(animes$Studio.3,"[[:punct:]]")
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
knitr::kable(Tema_total)
Genero_total=animes %>% select(Name,starts_with('Genero')) %>% pivot_longer(cols = starts_with("Genero"),values_to = 'Genero',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Genero))
Genero_total$Genero=str_squish(Genero_total$Genero)
Genero_total= Genero_total %>% group_by(Genero) %>% summarise(Total=n()) %>% arrange(desc(Total))
Genero_total
Studio_total=animes %>% select(Name,starts_with('Studio')) %>% pivot_longer(cols = starts_with("Studio"),values_to = 'Studio',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Studio))
Studio_total$Studio=str_squish(Studio_total$Studio)
Studio_total= Studio_total %>% group_by(Studio) %>% summarise(Total=n()) %>% arrange(desc(Total))
Studio_total
Studio_total=animes %>% select(Name,starts_with('Studio')) %>% pivot_longer(cols = starts_with("Studio"),values_to = 'Studio',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Studio))
Studio_total$Studio=str_squish(Studio_total$Studio)
Studio_total= Studio_total %>% group_by(Studio) %>% summarise(Total=n()) %>% arrange(desc(Total))
Studio_total
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(treemap)
library(stringr)
library(RColorBrewer)
library(TeachingDemos)
library(plotly)
animes_raw=read_csv('mal_top2000_anime.csv')
animes = animes_raw
pizza= function(x) {
tabela=table(x)
tabela=tabela[order(tabela)]
prop_tabela=prop.table(tabela)*100
pie(tabela,labels =paste(prop_tabela,'%') , col = brewer.pal(n =names(tabela) , name = "Set1"), clockwise = T)
legend("bottomleft", legend =names(tabela),
fill = brewer.pal(n = names(tabela), name = "Set1"))
}
arvore= function(x,titulo=''){
table(x) %>%
as.data.frame() %>%  treemap("x", "Freq",title = titulo, fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type,'Tipos de Animes')
arvore(animes$Demographic)
animes[paste0('Genero.',1:6)]=  str_split_fixed(animes$Genres,',', 6)
animes$Genero.1=str_remove_all(animes$Genero.1,"[[:punct:]]")
animes$Genero.2=str_remove_all(animes$Genero.2,"[[:punct:]]")
animes$Genero.3=str_remove_all(animes$Genero.3,"[[:punct:]]")
animes$Genero.4=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes$Genero.5=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes$Genero.6=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes[paste0('Tema.',1:6)]=str_split_fixed(animes$`Theme(s)`,',', 6)
animes$Tema.1=str_remove_all(animes$Tema.1,"[[:punct:]]")
animes$Tema.2=str_remove_all(animes$Tema.2,"[[:punct:]]")
animes$Tema.3=str_remove_all(animes$Tema.3,"[[:punct:]]")
animes$Tema.4=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes$Tema.5=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes$Tema.6=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes[paste0('Studio.',1:3)]=  str_split_fixed(animes$Studio,',', 3)
animes$Studio.1=str_remove_all(animes$Studio.1,"[[:punct:]]")
animes$Studio.2=str_remove_all(animes$Studio.2,"[[:punct:]]")
animes$Studio.3=str_remove_all(animes$Studio.3,"[[:punct:]]")
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
knitr::kable(Tema_total)
Genero_total=animes %>% select(Name,starts_with('Genero')) %>% pivot_longer(cols = starts_with("Genero"),values_to = 'Genero',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Genero))
Genero_total$Genero=str_squish(Genero_total$Genero)
Genero_total= Genero_total %>% group_by(Genero) %>% summarise(Total=n()) %>% arrange(desc(Total))
Genero_total
Studio_total=animes %>% select(Name,starts_with('Studio')) %>% pivot_longer(cols = starts_with("Studio"),values_to = 'Studio',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Studio))
Studio_total$Studio=str_squish(Studio_total$Studio)
Studio_total= Studio_total %>% group_by(Studio) %>% summarise(Total=n()) %>% arrange(desc(Total))
Studio_total
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(treemap)
library(stringr)
library(RColorBrewer)
library(TeachingDemos)
library(plotly)
animes_raw=read_csv('mal_top2000_anime.csv')
animes = animes_raw
pizza= function(x) {
tabela=table(x)
tabela=tabela[order(tabela)]
prop_tabela=prop.table(tabela)*100
pie(tabela,labels =paste(prop_tabela,'%') , col = brewer.pal(n =names(tabela) , name = "Set1"), clockwise = T)
legend("bottomleft", legend =names(tabela),
fill = brewer.pal(n = names(tabela), name = "Set1"))
}
arvore= function(x,titulo=''){
table(x) %>%
as.data.frame() %>%  treemap("x", "Freq",title = titulo, fontfamily.title = "serif",
fontsize.title = 24)
}
arvore(animes$Type,'Tipos de Animes')
arvore(animes$Demographic)
animes[paste0('Genero.',1:6)]=  str_split_fixed(animes$Genres,',', 6)
animes$Genero.1=str_remove_all(animes$Genero.1,"[[:punct:]]")
animes$Genero.2=str_remove_all(animes$Genero.2,"[[:punct:]]")
animes$Genero.3=str_remove_all(animes$Genero.3,"[[:punct:]]")
animes$Genero.4=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes$Genero.5=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes$Genero.6=str_remove_all(animes$Genero.4,"[[:punct:]]")
animes[paste0('Tema.',1:6)]=str_split_fixed(animes$`Theme(s)`,',', 6)
animes$Tema.1=str_remove_all(animes$Tema.1,"[[:punct:]]")
animes$Tema.2=str_remove_all(animes$Tema.2,"[[:punct:]]")
animes$Tema.3=str_remove_all(animes$Tema.3,"[[:punct:]]")
animes$Tema.4=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes$Tema.5=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes$Tema.6=str_remove_all(animes$Tema.4,"[[:punct:]]")
animes[paste0('Studio.',1:4)]=  str_split_fixed(animes$Studio,',', 4)
animes$Studio.1=str_remove_all(animes$Studio.1,"[[:punct:]]")
animes$Studio.2=str_remove_all(animes$Studio.2,"[[:punct:]]")
animes$Studio.3=str_remove_all(animes$Studio.3,"[[:punct:]]")
animes$Studio.4=str_remove_all(animes$Studio.4,"[[:punct:]]")
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
knitr::kable(Tema_total)
Genero_total=animes %>% select(Name,starts_with('Genero')) %>% pivot_longer(cols = starts_with("Genero"),values_to = 'Genero',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Genero))
Genero_total$Genero=str_squish(Genero_total$Genero)
Genero_total= Genero_total %>% group_by(Genero) %>% summarise(Total=n()) %>% arrange(desc(Total))
Genero_total
Studio_total=animes %>% select(Name,starts_with('Studio')) %>% pivot_longer(cols = starts_with("Studio"),values_to = 'Studio',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Studio))
Studio_total$Studio=str_squish(Studio_total$Studio)
Studio_total= Studio_total %>% group_by(Studio) %>% summarise(Total=n()) %>% arrange(desc(Total))
Studio_total
animes$Studio.4
pizza(animes$Demographic)
library(shiny); runApp('app.R.R')
library(shiny)
library(tidyverse)
library(RColorBrewer)
#rm(list = ls())
animes=readRDS('animes.R')
animes
colnames(animes)
ui = fluidPage(
selectInput('demo','Escolha uma Demografia',animes$Demographic),
selectInput('grafo','Escolha um gráfico',choices = c('Caixa','Histograma','Pizza')),
plotOutput('Media')
)
server <- function(input, output, session) {
output$Media = renderPlot({
demo =input$demo
p = animes %>%
filter(Demographic == demo ) %>%
group_by(Demographic) %>%
ggplot()
if(input$grafo=='Caixa') {
p +
geom_boxplot(aes(x=Demographic,y=Num._of_episodes),fill='blue')  +
xlab(demo) + ylab('Número de Episódios') + labs(title = 'Número de episódios')
} else if(input$grafo=='Histograma') {
p+
geom_histogram(aes(x=Num._of_episodes),fill='orange') +
ylab('Quantidade de Animes') + xlab(demo) + labs(title = 'Número de episódios') +
scale_x_continuous(n.breaks = 10)
} else {
exemplo= animes %>%
mutate(Sim=ifelse(Demographic == demo ,1,0 )) %>%
select(Sim) %>%
table()
pie(exemplo,labels =paste(prop.table(exemplo)*100,' %'),col = brewer.pal(n = 3, name = "Set1")          )
legend("topleft",legend = c('Não','Sim'),fill = brewer.pal(n = 3, name = "Set1"))
title(main=paste('Porcentagem de animes ',demo))
}
})
}
shinyApp(ui, server)
runApp('animes_app')
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
knitr::kable(Tema_total) %>% kableExtra::kable_styling()
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
knitr::kable(Tema_total) %>% kableExtra::kable_styling()
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
kbl(Tema_total)
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
kbl(Tema_total) %>% kable_styling()
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
kbl(Tema_total) %>% kable_styling()
library(tidyverse)
library(treemap)
library(stringr)
library(RColorBrewer)
library(TeachingDemos)
library(plotly)
library(kableExtra)
Tema_total=animes %>% select(Name,starts_with('Tema')) %>% pivot_longer(cols = starts_with("Tema"),values_to = 'Tema',values_drop_na = T) %>% mutate_all(na_if,"") %>% filter(!is.na(Tema))
Tema_total$Tema=str_squish(Tema_total$Tema)
Tema_total= Tema_total %>% group_by(Tema) %>% summarise(Total=n()) %>% arrange(desc(Total))
kbl(Tema_total) %>% kable_styling()
runApp('animes_app')
library(rsconnect)
rsconnect::setAccountInfo(name='10b92c-romario-gomes',
token='E587A387D3E33A7B38E74A637274D4AA',
secret='eARh2shT0MuIWaOK7CSjz9InhUsnwSaKaxxK2pGw')
rm(list=ls())
deployApp()
deployApp(
appId = '10b92c-romario-gomes'
)
deployApp(
account  = '10b92c-romario-gomes'
)
